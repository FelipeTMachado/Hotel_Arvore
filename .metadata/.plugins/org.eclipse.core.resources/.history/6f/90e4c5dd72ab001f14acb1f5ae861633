package model;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

class SistemaReservas {
    private RedBlackTree<String, Reserva> reservas = new RedBlackTree<>();
    private RedBlackTree<String, Reserva> historico = new RedBlackTree<>();

    public void cadastrarReserva(String cpf, Reserva reserva) {
        if (!verificarDisponibilidade(reserva.numeroQuarto, reserva.dataCheckIn, reserva.dataCheckOut)) {
            System.out.println("Erro: Conflito de reserva.");
            return;
        }
        reservas.put(cpf, reserva);
        System.out.println("Reserva cadastrada com sucesso!");
    }

    public void cancelarReserva(String cpf) {
        Reserva reserva = reservas.get(cpf);
        if (reserva != null) {
            reservas.delete(cpf);
            historico.put(cpf, reserva);
            System.out.println("Reserva cancelada e movida para o histórico.");
        } else {
            System.out.println("Erro: Reserva não encontrada.");
        }
    }

    public boolean verificarDisponibilidade(String numeroQuarto, LocalDate dataInicio, LocalDate dataFim) {
        for (Reserva reserva : getAllReservas()) {
            if (reserva.numeroQuarto.equals(numeroQuarto) &&
                (dataInicio.isBefore(reserva.dataCheckOut) && dataFim.isAfter(reserva.dataCheckIn))) {
                return false;
            }
        }
        return true;
    }

    private List<Reserva> getAllReservas() {
        List<Reserva> lista = new ArrayList<>();
        getAllReservas(reservas.getRoot(), lista);
        return lista;
    }

    private void getAllReservas(RedBlackTree<String, Reserva>.Node node, List<Reserva> lista) {
        if (node != null) {
            getAllReservas(node.left, lista);
            lista.add(node.value);
            getAllReservas(node.right, lista);
        }
    }

    
    
    // GETTERS E SETTERS
	public RedBlackTree<String, Reserva> getReservas() {
		return reservas;
	}

	public void setReservas(RedBlackTree<String, Reserva> reservas) {
		this.reservas = reservas;
	}

	public RedBlackTree<String, Reserva> getHistorico() {
		return historico;
	}

	public void setHistorico(RedBlackTree<String, Reserva> historico) {
		this.historico = historico;
	}
}